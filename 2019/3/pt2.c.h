/* Generated by           cobc 3.0-rc1.0 */
/* Generated from         pt2.cob */
/* Generated at           Jan 22 2020 21:12:17 */
/* GnuCOBOL build date    Jan 01 2020 23:25:03 */
/* GnuCOBOL package date  Apr 22 2018 22:26:54 UTC */
/* Compile command        cobc -x -o pt2.exe -g pt2.cob */


/* Module path */
static const char		*cob_module_path = NULL;

/* Number of call parameters */
static int		cob_call_params = 0;

/* Attributes */

static const cob_field_attr a_1 =	{0x10,  10,   0, 0x0001, NULL};
static const cob_field_attr a_2 =	{0x11,   9,   0, 0x0821, NULL};
static const cob_field_attr a_3 =	{0x10,   1,   0, 0x1000, NULL};
static const cob_field_attr a_4 =	{0x10,   9,   0, 0x0000, NULL};
static const cob_field_attr a_5 =	{0x21,   0,   0, 0x1000, NULL};
static const cob_field_attr a_6 =	{0x01,   0,   0, 0x0000, NULL};
static const cob_field_attr a_7 =	{0x10,   9,   0, 0x0001, NULL};
static const cob_field_attr a_8 =	{0x10,   5,   0, 0x1000, NULL};
static const cob_field_attr a_9 =	{0x21,   0,   0, 0x0000, NULL};
static const cob_field_attr a_10 =	{0x10,  10,   0, 0x0000, NULL};


/* Constants */
static const cob_field c_1	= {1, (cob_u8_ptr)"1", &a_3};
static const cob_field c_2	= {1, (cob_u8_ptr)"[", &a_5};
static const cob_field c_3	= {20, (cob_u8_ptr)"] INSERTED CABLE1: (", &a_5};
static const cob_field c_4	= {2, (cob_u8_ptr)", ", &a_5};
static const cob_field c_5	= {6, (cob_u8_ptr)") at [", &a_5};
static const cob_field c_6	= {1, (cob_u8_ptr)"]", &a_5};
static const cob_field c_7	= {18, (cob_u8_ptr)"MODIFIED CABLE1: (", &a_5};
static const cob_field c_8	= {1, (cob_u8_ptr)")", &a_5};
static const cob_field c_9	= {4, (cob_u8_ptr)"NOPE", &a_5};
static const cob_field c_10	= {24, (cob_u8_ptr)"FOUND VISITED BY BOTH: (", &a_5};
static const cob_field c_11	= {9, (cob_u8_ptr)"MATCHES: ", &a_5};
static const cob_field c_12	= {19, (cob_u8_ptr)"MINIMUM STEPS-SUM: ", &a_5};
static const cob_field c_13	= {6, (cob_u8_ptr)"Lp 1: ", &a_5};
static const cob_field c_14	= {17, (cob_u8_ptr)",  Cur Best Sum: ", &a_5};
static const cob_field c_15	= {6, (cob_u8_ptr)"Lp 2: ", &a_5};
static const cob_field c_16	= {1, (cob_u8_ptr)"0", &a_3};
static const cob_field c_17	= {5, (cob_u8_ptr)"38500", &a_8};
static const cob_field c_18	= {10, (cob_u8_ptr)"cable1.txt", &a_5};
static const cob_field c_19	= {10, (cob_u8_ptr)"cable2.txt", &a_5};


/* Strings */
static const char st_1[]	= "SET";
static const char st_2[]	= "MOVE";
static const char st_3[]	= "OPEN";
static const char st_4[]	= "PERFORM";
static const char st_5[]	= "READ";
static const char st_6[]	= "ADD";
static const char st_7[]	= "CLOSE";
static const char st_8[]	= "IF";
static const char st_9[]	= "SUBTRACT";
static const char st_10[]	= "SEARCH";
static const char st_11[]	= "DISPLAY";
static const char st_12[]	= "STOP RUN";


/* Source file names */
static const char *st_source_files[]	= { "" 
		,"pt2.cob"};
static int COB_NOINLINE
cob_get_numdisp (const void *data, const int size)
{
	const unsigned char	*p;
	int			n;
	int 			retval;
	p = (const unsigned char *)data;
	retval = 0;
	for (n = 0; n < size; ++n, ++p) {
		retval *= 10;
		if (*p > '0' && *p <= '9')
		    retval += (*p - '0');
	}
	return retval;
}

static COB_INLINE COB_A_INLINE int
cob_cmpswp_s32 (const void *p, const cob_s64_t n)
{
	int	val;
	val = COB_BSWAP_32 (*(const int __unaligned *)p);
	return (val < n) ? -1 : (val > n);
}

