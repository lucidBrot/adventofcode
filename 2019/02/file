HAI 1.4
  CAN HAS STDIO?

  I HAS A problem ITZ A BUKKIT

BTW prints opcode and switchcases execution
HOW IZ problem DOTHING YR OPCODE AN YR BASE AN YR ARG AN YR TARGET
    VISIBLE SMOOSH "Execute function DOTHING " AN OPCODE AN " " AN BASE AN " " AN ARG MKAY
    OPCODE, WTF?
        OMG 1 BTW ADD
            VISIBLE "Should add"
            I HAS A thing ITZ SUM OF ME'Z SRS BASE AN ME'Z SRS ARG
            ME'Z SRS TARGET R thing
            GTFO
        OMG 2 BTW MULTIPLY
            VISIBLE "Should multiply"
            I HAS A thing ITZ PRODUKT OF ME'Z SRS BASE AN ME'Z SRS ARG
            ME'Z SRS TARGET R thing
            GTFO
        OMG 99
            VISIBLE "Should stop"
            FOUND YR -1
        OMGWTF
            VISIBLE SMOOSH "Unexpected Opcode: " AN OPCODE MKAY
            FOUND YR -1
    OIC
    GTFO
IF U SAY SO

OBTW THIS WOULD REQUIRE FUTURE BRANCH
    CAN HAS STRING?
    BTW PARSE BUKKIT from comma delimited input
    I HAS A CORD
    GIMMEH CORD
    I HAS A numnum ITZ 0
    I HAS A county ITZ 0
    I HAS A index
    IM IN YR LOOP UPPIN YR INDEX TIL BOTH SAEM INDEX STRING'Z LEN YR CORD MKAY 
      I HAS A char ITZ I IZ STRING'Z AT YR CORD AN YR INDEX MKAY
      BOTH SAEM char ",", O RLY?
        YA RLY
          BTW ITZ A COMMA
          problem HAS A SRS numnum ITZ county
          county R 0
          numnum R SUM OF numnum AN 1
        NO WAI
          BTW ITZ A GUD NUMBER
          county R PRODUKT OF county AN 10
          char IS NOW A NUMBER
          county R SUM OF county AN char
      OIC
      index R INDEX
    IM OUTTA YR LOOP
    problem HAS A len ITZ index
TLDR

    BTW PARSING BUKKIT from newline delimited input
  IM IN YR LOOP UPPIN YR INDEX
      I HAS A something
      GIMMEH something
      something IS NOW A YARN
      BOTH SAEM something AN "", O RLY?
        YA RLY
          VISIBLE "End of input"
          problem HAS A len ITZ INDEX
          GTFO
        NO WAI
      OIC
      something IS NOW A NUMBR
      problem HAS A SRS INDEX ITZ something
  IM OUTTA YR LOOP

  VISIBLE "HAI WORLD!!!1!"

  BTW set up program alarm state
  problem'Z SRS 1 R 12
  problem'Z SRS 2 R 2

  BTW execute
  IM IN YR LOOP UPPIN YR INDEX TIL BOTH SAEM INDEX problem'Z len
    I HAS A opcode ITZ problem'Z SRS INDEX
    BOTH SAEM opcode AN 99, O RLY?
        YA RLY, GTFO
    OIC

    I HAS A base ITZ problem'Z SRS SUM OF INDEX AN 1
    I HAS A arg ITZ problem'Z SRS SUM OF INDEX AN 2
    I HAS A target ITZ problem'Z SRS SUM OF INDEX AN 3
    VISIBLE SMOOSH "Should Execute: " AN opcode AN " " AN base AN " " AN arg AN " " AN target MKAY

    BTW EXECUTE
  I HAS A val
  val R problem IZ DOTHING YR opcode AN YR base AN YR arg AN YR target MKAY
  BOTH SAEM val AN -1, O RLY?
    YA RLY, VISIBLE "Should Terminate: TODO"
    GTFO
  OIC

    INDEX R SUM OF INDEX AN 3 BTW UPP THEM INDEX
  IM OUTTA YR LOOP

  BTW print contents
  VISIBLE ""
IM IN YR LOOP UPPIN YR INDEX TIL BOTH SAEM INDEX problem'Z len
         VISIBLE problem'Z SRS INDEX
   IM OUTTA YR LOOP

   BTW print pos 0
   VISIBLE SMOOSH "Pos Zero: " AN problem'Z SRS 0 MKAY

KTHXBYE

OBTW
    OPCODES:
        1:  ADD
            add up next two numbers as pointers to the inputs,
            store in *num3
        2:  MULTIPLY
        99: HALT

    After operation, move forward 4 positions (opcode, input, input, output)

TLDR

